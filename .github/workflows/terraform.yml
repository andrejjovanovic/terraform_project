name: Terraform Plan and Checkov

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform init
      run: terraform init

    - name: Terraform plan
      id: plan
      run: terraform plan -out=tfplan.out

    - name: Save plan as artifact
      uses: actions/upload-artifact@v2
      with:
        name: terraform-plan
        path: tfplan.out

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
          
    - name: Test with Checkov
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: terraform 

    - name: Run Checkov
      run: checkov -f .

    - name: Extract Checkov results
      id: checkov_results
      run: |
        echo "::set-output name=checkov_output::$(checkov -f . --output json)"

    - name: Comment on pull request with Terraform plan
      if: success()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const core = require('@actions/core');
          const { context } = require('@actions/github');

          const planPath = `${process.env.RUNNER_TEMP}/tfplan.out`;
          const planExists = fs.existsSync(planPath);

          const prNumber = context.payload.pull_request.number;

          if (planExists) {
            const plan = fs.readFileSync(planPath, 'utf-8');
            const octokit = github.getOctokit(core.getInput('token'));
            await octokit.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: '### Terraform Plan\n' + '```' + '\n' + plan + '\n' + '```'
            });
          }

    - name: Comment on pull request with Checkov results
      if: always()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const core = require('@actions/core');
          const { context } = require('@actions/github');

          const checkovOutput = core.getInput('checkov_results');

          const prNumber = context.payload.pull_request.number;

          const octokit = github.getOctokit(core.getInput('token'));
          await octokit.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: '### Checkov Results\n' + '```json' + '\n' + checkovOutput + '\n' + '```'
          });

    - name: Approve Terraform changes and apply
      if: success() && steps.plan.outputs.plan
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const core = require('@actions/core');
          const { context } = require('@actions/github');

          const planPath = `${process.env.RUNNER_TEMP}/tfplan.out`;
          const planExists = fs.existsSync(planPath);

          const prNumber = context.payload.pull_request.number;

          if (planExists) {
            const octokit = github.getOctokit(core.getInput('token'));
            await octokit.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: 'Approving Terraform plan. Applying changes...'
            });

            await octokit.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
          }
